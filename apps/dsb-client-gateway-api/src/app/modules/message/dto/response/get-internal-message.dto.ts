import { ApiProperty } from '@nestjs/swagger';
import { IsString } from 'class-validator';

export class InternalMessageDto {
  @IsString()
  @ApiProperty({
    description: 'transactionId for message idempotency',
    type: String,
    example: 'did:ethr:volta:0x09Df5d33f1242E1b8aA5E0E0F6BfA687E6846993',
  })
  transactionId: string;
  @IsString()
  @ApiProperty({
    description:
      'clientGatewayMessageId sent by Client gateway to uniquely identify message',
    type: String,
    example: '623c875beaa0422bfc19b1ce',
  })
  clientGatewayMessageId: string;

  @IsString()
  @ApiProperty({
    description: 'encryted symmetric key for decrypting the message',
    type: String,
    example: '623c875beaa0422bfc19b1ce',
  })
  payload: string;

  @IsString()
  @ApiProperty({
    description: 'topicId for which message was sent',
    type: String,
    example: '623c875beaa0422bfc19b1ce',
  })
  topicId: string;

  @IsString()
  @ApiProperty({
    description: 'topicVersion for which message was sent',
    type: String,
    example: '2.0.0',
  })
  topicVersion: string;

  @IsString()
  @ApiProperty({
    description: 'signature generated by client gateway',
    type: String,
    example: '2.0.0',
  })
  signature: string;

  @IsString()
  @ApiProperty({
    description: 'if internal message is for file upload or message',
    type: Boolean,
    example: 'true',
  })
  isFile: boolean;

  @IsString()
  @ApiProperty({
    description: 'Sender Did',
    type: String,
    example: 'true',
  })
  senderDid: string;
}
